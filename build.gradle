plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
	id "com.gradleup.shadow" version "8.3.0"

    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

project.ext.imgui_version = "1.87.6"
var versions = ["1.21.6", "1.21.7", "1.21.8"]

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
    gradlePluginPortal()
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"myworld_traffic_addition" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	accessWidenerPath = file("src/main/resources/myworld_traffic_addition.accesswidener")
}


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Dear ImGui Implementation
    include implementation("io.github.spair:imgui-java-binding:${project.imgui_version}")

    include implementation("io.github.spair:imgui-java-lwjgl3:${project.imgui_version}") {
        exclude group: "org.lwjgl"
    }

    include implementation("io.github.spair:imgui-java-natives-windows:${project.imgui_version}")
    include implementation("io.github.spair:imgui-java-natives-linux:${project.imgui_version}")
    include implementation("io.github.spair:imgui-java-natives-macos:${project.imgui_version}")

    // Other dependencies
    include implementation("io.github.tobiazsh.jengua:Jengua:${project.jengua_version}") // Jengua; Translation library
}

shadowJar {
    relocate "org.lwjgl", "at.tobias.myworld_traffic_addition.lwjgl"
}

processResources {
    inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}


// PUBLISHING

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "myworld-traffic-addition"
    versionNumber = project.version
    versionType = "release"
    uploadFile = remapJar
    gameVersions = versions
    loaders = ["fabric"]
    dependencies {
        required.project "fabric-api"
    }
}

tasks.register("publishAll") {
    dependsOn("modrinth")
}